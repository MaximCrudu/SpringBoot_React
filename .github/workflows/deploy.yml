name: CICD

on:
  push:
    branches: [ main ] # will deploy only main branch, if use master as default branch than rename

  workflow_dispatch:

env: # defining the environments
  # Postgres
  POSTGRESQL_VERSION: 13.1
  POSTGRESQL_DB: crudmax
  POSTGRESQL_USER: postgres
  POSTGRESQL_PASSWORD: password
  # Java
  JAVA_VERSION: 1.15
  # DockerHub
  DOCKERHUB_PASSWORD: crudmax
  # AWS & Elastic Bean Stalk. Check all on AWS
  AWS_REGION: us-east-2 # the region where the application is running in AWS
  EB_ENVIRONMENT_NAME: Fullstackreactbootstrap-env # check in AWS
  EB_APPLICATION_NAME: fullstack_react_bootstrap # check in AWS
  EB_DEPLOYMENT_PACKAGE: elasticbeanstalk/docker-compose.yml # file in repository

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_DB: ${{ env.POSTGRESQL_DB }}
          POSTGRES_USER: ${{ env.POSTGRESQL_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: 8398a7/action-slack@v3 # (1) action which allows to send slack notifications
        with: # parameters
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'CICD ongoing... :eyes:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # comes from github secrets

      - uses: actions/checkout@v2 # (2) checkout the code in this runner

      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3 # (3)
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build Number
        id: build-number
        run: echo "::set-output name=BUILD_NUMBER::$(date '+%-d.%-m.%Y.%-H.%-M.%-S')" # (4)

      - name: Docker Login
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a # (5)
        with:
          username: ${{ env.DOCKERHUB_PASSWORD }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }} # comes from github secrets

      - name: Maven Clean Package and Push to Dockerhub # (6) and (7)
        run: | 
          ./mvnw --no-transfer-progress clean package \
            -P build-frontend \
            -P jib-push-to-dockerhub \
              -Dapp.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}}
      - uses: 8398a7/action-slack@v3 # (8) slack notification
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':white_check_mark: pushed crudmax/springboot-react-fullstack:${{steps.build-number.outputs.BUILD_NUMBER}} to docker hub... https://hub.docker.com/repository/docker/crudmax/springboot-react-fullstack'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # comes from github secrets
      - name: Update and commit app version in docker-compose.yaml # (9) Will commit automatically the changes on github
        run: |
          BUILD_NUMBER=${{steps.build-number.outputs.BUILD_NUMBER}}
          echo -e "Current elasticbeanstalk/docker-compose.yml\n$(cat elasticbeanstalk/docker-compose.yml)"
          sed -i -E 's_(crudmax/springboot-react-fullstack:)([^"]*)_\1'${BUILD_NUMBER}'_' elasticbeanstalk/docker-compose.yml
          echo -e "Current elasticbeanstalk/docker-compose.yml\n$(cat elasticbeanstalk/docker-compose.yml)"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add elasticbeanstalk/docker-compose.yml
          git commit -m "new app version: ${BUILD_NUMBER}"
          git push

      - uses: 8398a7/action-slack@v3 # (10) slack notification
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':elasticbeanstalk: :aws: Deployment started... :grimacing: :crossed_fingers:' # with emojis
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # comes from github secrets
      - name: Beanstalk Deploy # (11)
        uses: einaregilsson/beanstalk-deploy@ebe3476a4ce991d54336935e75e78dd9d86f9408
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          deployment_package: ${{ env.EB_DEPLOYMENT_PACKAGE }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: Version ${{steps.build-number.outputs.BUILD_NUMBER}} deployed via github actions ${{ github.sha }}
          wait_for_deployment: 60
      - uses: 8398a7/action-slack@v3 # (12)
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':tada: :arrow_right: http://springbootreactfullstack-env.eba-3imjbkem.eu-west-1.elasticbeanstalk.com' # URL of running AWS environment that gives access to the application
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() # if the build fails, this action will always trigger